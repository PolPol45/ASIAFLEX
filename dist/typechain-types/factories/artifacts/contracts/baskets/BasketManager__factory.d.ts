import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { BasketManager, BasketManagerInterface } from "../../../../artifacts/contracts/baskets/BasketManager";
type BasketManagerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BasketManager__factory extends ContractFactory {
  constructor(...args: BasketManagerConstructorParams);
  getDeployTransaction(
    admin: AddressLike,
    adminDelay: BigNumberish,
    baseAssetAddress: AddressLike,
    priceOracleAddress: AddressLike,
    overrides?: NonPayableOverrides & {
      from?: string;
    }
  ): Promise<ContractDeployTransaction>;
  deploy(
    admin: AddressLike,
    adminDelay: BigNumberish,
    baseAssetAddress: AddressLike,
    priceOracleAddress: AddressLike,
    overrides?: NonPayableOverrides & {
      from?: string;
    }
  ): Promise<
    BasketManager & {
      deploymentTransaction(): ContractTransactionResponse;
    }
  >;
  connect(runner: ContractRunner | null): BasketManager__factory;
  static readonly bytecode =
    "0x60a060405234801561001057600080fd5b5060405161336938038061336983398101604081905261002f916102c5565b82846001600160a01b03811661005f57604051636116401160e11b81526000600482015260240160405180910390fd5b600180546001600160d01b0316600160d01b65ffffffffffff85160217905561008960008261018e565b50506001600455506001600160a01b0382166100b8576040516366856dc760e11b815260040160405180910390fd5b6001600160a01b0381166100df576040516366856dc760e11b815260040160405180910390fd5b6001600160a01b03828116608052600980546001600160a01b03191691831691909117905561012e7fe1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca98561018e565b506101597fced6982f480260bdd8ad5cb18ff2854f0306d78d904ad6cc107e8f3a0f526c188561018e565b506101847f055d94e0ab1958d209bcd4f31505e92c417b2b9ba9c815a9fc5a15b1664c6e218561018e565b5050505050610326565b6000826101ec5760006101a96002546001600160a01b031690565b6001600160a01b0316146101d057604051631fe1e13d60e11b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0384161790555b6101f683836101ff565b90505b92915050565b6000828152602081815260408083206001600160a01b038516845290915281205460ff166102a1576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556102593390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016101f9565b5060006101f9565b80516001600160a01b03811681146102c057600080fd5b919050565b600080600080608085870312156102db57600080fd5b6102e4856102a9565b9350602085015165ffffffffffff811681146102ff57600080fd5b925061030d604086016102a9565b915061031b606086016102a9565b905092959194509250565b6080516130136103566000396000818161056601528181610b62015281816112dd015261173901526130136000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c80638d26756411610146578063cdf456e1116100c3578063d547741f11610087578063d547741f146105f8578063d602b9fd1461060b578063e232d6fb14610613578063e777efc814610626578063ef5eb33f14610649578063f685f4ae146106b357600080fd5b8063cdf456e114610561578063cefc142914610588578063cf6eefb714610590578063d11a57ec146105be578063d1c11043146105e557600080fd5b8063bfc69e1c1161010a578063bfc69e1c146104ec578063c09fb4e914610513578063c23ba7cd14610533578063c2d7294614610546578063cc8463c81461055957600080fd5b80638d2675641461047b5780638da5cb5b146104a257806391d14854146104aa578063a1eda53c146104bd578063a217fddf146104e457600080fd5b80633f4ba83a116101df578063606bf2be116101a3578063606bf2be146103ec578063634e93da14610429578063649a5ec71461043c5780638456cb591461044f57806384ef8ffc14610457578063862c452f1461046857600080fd5b80633f4ba83a1461038e578063530e784f146103965780635b222077146103a95780635b4468d2146103bc5780635c975abb146103e157600080fd5b80632630c12f116102265780632630c12f146102f557806326af1dd5146103205780632f1eb17c146103485780632f2ff15d1461036857806336568abe1461037b57600080fd5b806301ffc9a714610263578063022d63fb1461028b5780630aa6220b146102a7578063204633cc146102b1578063248a9ca3146102c4575b600080fd5b6102766102713660046125ce565b6106c6565b60405190151581526020015b60405180910390f35b620697805b60405165ffffffffffff9091168152602001610282565b6102af6106f1565b005b6102af6102bf366004612653565b610707565b6102e76102d23660046126a8565b60009081526020819052604090206001015490565b604051908152602001610282565b600954610308906001600160a01b031681565b6040516001600160a01b039091168152602001610282565b61033361032e3660046126c1565b610785565b60408051928352602083019190915201610282565b61035b6103563660046126c1565b6107db565b60405161028291906126de565b6102af610376366004612787565b610918565b6102af610389366004612787565b610944565b6102af6109eb565b6102af6103a43660046127b7565b6109fe565b6102af6103b73660046127ec565b610a9b565b6103cf6103ca36600461282f565b610af3565b60405160ff9091168152602001610282565b60035460ff16610276565b6103ff6103fa3660046126c1565b610b06565b6040805195151586526020860194909452928401919091526060830152608082015260a001610282565b6102af6104373660046127b7565b610cb5565b6102af61044a36600461285d565b610cc9565b6102af610cdd565b6002546001600160a01b0316610308565b6103336104763660046126c1565b610cf0565b6102e77f055d94e0ab1958d209bcd4f31505e92c417b2b9ba9c815a9fc5a15b1664c6e2181565b610308610eee565b6102766104b8366004612787565b610f07565b6104c5610f30565b6040805165ffffffffffff938416815292909116602083015201610282565b6102e7600081565b6102e77fced6982f480260bdd8ad5cb18ff2854f0306d78d904ad6cc107e8f3a0f526c1881565b6105266105213660046126c1565b610f84565b6040516102829190612885565b6102af6105413660046126c1565b6110aa565b6102e76105543660046128fa565b6111bc565b610290611372565b6103087f000000000000000000000000000000000000000000000000000000000000000081565b6102af6113d1565b610598611411565b604080516001600160a01b03909316835265ffffffffffff909116602083015201610282565b6102e77fe1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca981565b6102af6105f3366004612959565b611432565b6102af610606366004612787565b611530565b6102af611558565b6102af6106213660046129e5565b61156b565b6102766106343660046126a8565b60086020526000908152604090205460ff1681565b6106986106573660046126c1565b60408051808201909152600080825260208201525060ff16600090815260066020908152604091829020825180840190935280548352600101549082015290565b60408051825181526020928301519281019290925201610282565b6102e76106c1366004612a71565b61164a565b60006001600160e01b031982166318a4c3c360e11b14806106eb57506106eb82611880565b92915050565b60006106fc816118b5565b6107046118bf565b50565b7fced6982f480260bdd8ad5cb18ff2854f0306d78d904ad6cc107e8f3a0f526c18610731816118b5565b60ff84166000908152600760205260409020546001600160a01b031661077457604051633e19716360e21b815260ff851660048201526024015b60405180910390fd5b61077f8484846118cc565b50505050565b60ff8116600090815260076020526040812080548291906001600160a01b03166107c757604051633e19716360e21b815260ff8516600482015260240161076b565b806001015481600201549250925050915091565b6108206040518060c0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008019168152602001606081525090565b60ff8216600090815260076020908152604091829020825160c08101845281546001600160a01b03168152600182015492810192909252600281015492820192909252600382015460608201526004820154608082015260058201805491929160a08401919061088f90612ad8565b80601f01602080910402602001604051908101604052809291908181526020018280546108bb90612ad8565b80156109085780601f106108dd57610100808354040283529160200191610908565b820191906000526020600020905b8154815290600101906020018083116108eb57829003601f168201915b5050505050815250509050919050565b8161093657604051631fe1e13d60e11b815260040160405180910390fd5b6109408282611ac2565b5050565b8115801561095f57506002546001600160a01b038281169116145b156109e15760008061096f611411565b90925090506001600160a01b038216151580610991575065ffffffffffff8116155b806109a457504265ffffffffffff821610155b156109cc576040516319ca5ebb60e01b815265ffffffffffff8216600482015260240161076b565b50506001805465ffffffffffff60a01b191690555b6109408282611ae7565b60006109f6816118b5565b610704611b1a565b6000610a09816118b5565b6001600160a01b038216610a505760405162461bcd60e51b815260206004820152600e60248201526d6f7261636c65206164647265737360901b604482015260640161076b565b600980546001600160a01b0319166001600160a01b0384169081179091556040517fefe8ab924ca486283a79dc604baa67add51afb82af1db8ac386ebbba643cdffd90600090a25050565b6000610aa6816118b5565b60ff83166000908152600760205260409020546001600160a01b0316610ae457604051633e19716360e21b815260ff8416600482015260240161076b565b610aee8383611b6c565b505050565b6000610aff8383611c55565b9392505050565b60ff81166000908152600760205260408120805482918291829182916001600160a01b0316610b4d57604051633e19716360e21b815260ff8816600482015260240161076b565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd59190612b0c565b945060008160000160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c529190612b0c565b905081600101549350816002015492508060001480610c6f575083155b15610c8457506001955060009350610cac9050565b670de0b6b3a7640000610c978583612b3b565b610ca19190612b52565b945084861015965050505b91939590929450565b6000610cc0816118b5565b61094082611c90565b6000610cd4816118b5565b61094082611cfc565b6000610ce8816118b5565b610704611d6c565b60ff8116600090815260076020526040812080548291906001600160a01b0316610d3257604051633e19716360e21b815260ff8516600482015260240161076b565b60ff84166000908152600560205260409020805480610d885760405162461bcd60e51b8152602060048201526012602482015271616c6c6f636174696f6e206d697373696e6760701b604482015260640161076b565b60ff86166000908152600660209081526040808320815180830190925280548252600101549181019190915260001990825b84811015610e5457600080610ded888481548110610dda57610dda612b74565b9060005260206000209060020201611da9565b91509150612710888481548110610e0657610e06612b74565b6000918252602090912060016002909202010154610e289061ffff1684612b3b565b610e329190612b52565b610e3c9087612b8a565b955084811015610e4a578094505b5050600101610dba565b506000610e618342612b9d565b8251909150811115610e9357815160405163226ce11760e11b815261076b918391600401918252602082015260400190565b6001870184905560028701839055604080518581526020810185905260ff8c16917fec1f95adb8038d1bd877fba6ac596c1b9310cb06e13f0953bdfe97b3dc9be66f910160405180910390a250919890975095505050505050565b6000610f026002546001600160a01b031690565b905090565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600254600090600160d01b900465ffffffffffff168015158015610f5c57504265ffffffffffff821610155b610f6857600080610f7c565b600254600160a01b900465ffffffffffff16815b915091509091565b60ff8116600090815260056020526040812080546060929067ffffffffffffffff811115610fb457610fb4612bb0565b60405190808252806020026020018201604052801561100657816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181610fd25790505b50905060005b82548110156110a25782818154811061102757611027612b74565b600091825260209182902060408051608081018252600293909302909101805483526001015461ffff81169383019390935262010000830460ff16151590820152630100000090910463ffffffff166060820152825183908390811061108f5761108f612b74565b602090810291909101015260010161100c565b509392505050565b7fced6982f480260bdd8ad5cb18ff2854f0306d78d904ad6cc107e8f3a0f526c186110d4816118b5565b60ff8216600090815260076020526040902080546001600160a01b031661111357604051633e19716360e21b815260ff8416600482015260240161076b565b60ff8316600090815260066020908152604080832081518083019092528054825260010154918101829052600384015490929161114f91612b8a565b90508042101561117557604051634309a1f760e01b81526004810182905260240161076b565b426003840181905560405190815260ff8616907f546669df2012b299a93ffbc7cca46069151c93dc35ec5b270136e9f6730414699060200160405180910390a25050505050565b60006111c6611f60565b6111ce611f84565b836000036111ef5760405163162908e360e11b815260040160405180910390fd5b6001600160a01b038216611201573391505b600061120d8787611c55565b9050600061121a82611fae565b905061122582610cf0565b50508054604051632770a7eb60e21b8152336004820152602481018890526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b15801561127257600080fd5b505af1158015611286573d6000803e3d6000fd5b50505050670de0b6b3a76400008160010154876112a39190612b3b565b6112ad9190612b52565b9250848310156112d05760405163334ee9a160e01b815260040160405180910390fd5b6113046001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168585611ff2565b60018101546040805188815260208101869052908101919091526001600160a01b03851690339060ff8516907fad1f70177471924786d343a5ed252cf4aad0bde5edd8b45a62a0ffb28de2a9cb9060600160405180910390a450506113696001600455565b95945050505050565b600254600090600160d01b900465ffffffffffff16801515801561139d57504265ffffffffffff8216105b6113b857600154600160d01b900465ffffffffffff166113cb565b600254600160a01b900465ffffffffffff165b91505090565b60006113db611411565b509050336001600160a01b0382161461140957604051636116401160e11b815233600482015260240161076b565b610704612051565b6001546001600160a01b03811691600160a01b90910465ffffffffffff1690565b600061143d816118b5565b60006114498888611c55565b60ff81166000908152600760205260409020549091506001600160a01b03161561148b57604051630118fc0d60e61b815260ff8216600482015260240161076b565b60ff8116600090815260076020526040902080546001600160a01b0319166001600160a01b038816178155426003909101556114c88186866118cc565b6114d28184611b6c565b604080516001600160a01b0388168152843560208083019190915285013581830152905160ff8316917fa58e26b1c273f5b3c89089091f4f54bb18acd623387b8a5cefdb3961da7821a8919081900360600190a25050505050505050565b8161154e57604051631fe1e13d60e11b815260040160405180910390fd5b61094082826120ea565b6000611563816118b5565b61070461210f565b7f055d94e0ab1958d209bcd4f31505e92c417b2b9ba9c815a9fc5a15b1664c6e21611595816118b5565b60ff8516600090815260076020526040902080546001600160a01b03166115d457604051633e19716360e21b815260ff8716600482015260240161076b565b60048101859055600581016115ea848683612c14565b5060008581526008602052604090819020805460ff191690555160ff8716907fbe09c4126adb37f0497c8aea31a44b3910b9175026c100778ffca24cb476fc559061163a90889088908890612cd4565b60405180910390a2505050505050565b6000611654611f60565b61165c611f84565b8460000361167d5760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03831661168f573392505b600061169b8888611c55565b905060006116a882611fae565b90506116b382610cf0565b5050831561172c5760008481526008602052604090205460ff16156116ee5760405163fab54c7560e01b81526004810185905260240161076b565b8381600401541461171257604051630b82817b60e21b815260040160405180910390fd5b6000848152600860205260409020805460ff191660011790555b6117616001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308a61211a565b600181015461177888670de0b6b3a7640000612b3b565b6117829190612b52565b9250858310156117a55760405163334ee9a160e01b815260040160405180910390fd5b80546040516340c10f1960e01b81526001600160a01b03878116600483015260248201869052909116906340c10f1990604401600060405180830381600087803b1580156117f257600080fd5b505af1158015611806573d6000803e3d6000fd5b5050506001820154604080518a81526020810187905290810191909152606081018690526001600160a01b0387169150339060ff8516907fcf0bbf72be6721a9ecbec49a280ec0757f78020bc73cf7353b3d044fb9c88ded9060800160405180910390a450506118766001600455565b9695505050505050565b60006001600160e01b03198216637965db0b60e01b14806106eb57506301ffc9a760e01b6001600160e01b03198316146106eb565b6107048133612153565b6118ca60008061218c565b565b60ff831660009081526005602052604081206118e79161258b565b8060008167ffffffffffffffff81111561190357611903612bb0565b60405190808252806020026020018201604052801561192c578160200160208202803683370190505b50905060008267ffffffffffffffff81111561194a5761194a612bb0565b604051908082528060200260200182016040528015611973578160200160208202803683370190505b5090506000805b84811015611a5a573687878381811061199557611995612b74565b90506080020190508060200160208101906119b09190612d1a565b6119be9061ffff1684612b8a565b60ff8a16600090815260056020908152604082208054600181018255908352912091945082916002909102016119f48282612d45565b50508060000135858381518110611a0d57611a0d612b74565b602002602001018181525050806020016020810190611a2c9190612d1a565b848381518110611a3e57611a3e612b74565b61ffff909216602092830291909101909101525060010161197a565b508061271014611a7c5760405162e9840b60e01b815260040160405180910390fd5b8660ff167f380a42ba34543755f56f147a198a3d673cef1c0978bccea59fc0d1f62ca35c7e8484604051611ab1929190612dc6565b60405180910390a250505050505050565b600082815260208190526040902060010154611add816118b5565b61077f838361224c565b6001600160a01b0381163314611b105760405163334bd91960e11b815260040160405180910390fd5b610aee82826122b4565b611b226122f1565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b8035611bac5760405162461bcd60e51b815260206004820152600f60248201526e1cdd185b19481d1a1c995cda1bdb19608a1b604482015260640161076b565b6000816020013511611bf55760405162461bcd60e51b81526020600482015260126024820152711c9958985b185b98d9481a5b9d195c9d985b60721b604482015260640161076b565b60ff821660008181526006602090815260409182902084358082558583013560019092018290558351908152918201527fd9cdf6c16abb1390f1b403125447baeb61672ef7e78879fceecf773f7607efe291015b60405180910390a25050565b6000816002811115611c6957611c69612e4c565b836002811115611c7b57611c7b612e4c565b611c86906003612b3b565b610aff9190612b8a565b6000611c9a611372565b611ca342612314565b611cad9190612e62565b9050611cb9828261234b565b60405165ffffffffffff821681526001600160a01b038316907f3377dc44241e779dd06afab5b788a35ca5f3b778836e2990bdb26a2a4b2e5ed690602001611c49565b6000611d07826123ca565b611d1042612314565b611d1a9190612e62565b9050611d26828261218c565b6040805165ffffffffffff8085168252831660208201527ff1038c18cf84a56e432fdbfaf746924b7ea511dfe03a6506a0ceba4888788d9b910160405180910390a15050565b611d74611f60565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b4f3390565b60095481546040516331d98b3f60e01b8152600092839283928392839283926001600160a01b03909216916331d98b3f91611dea9160040190815260200190565b608060405180830381865afa158015611e07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2b9190612e80565b935093509350935083600003611e5a578654604051637deb50c360e11b8152600481019190915260240161076b565b8015611e7f578654604051632c57c81560e11b8152600481019190915260240161076b565b8160ff16601203611e9257839550611eee565b60128260ff161115611ec857611eac601260ff8416612b9d565b611eb790600a612fb3565b611ec19085612b52565b9550611eee565b611ed660ff83166012612b9d565b611ee190600a612fb3565b611eeb9085612b3b565b95505b600187015462010000900460ff168015611f18575060018701546301000000900463ffffffff1615155b15611f5457600187015461271090611f3d906301000000900463ffffffff1688612b3b565b611f479190612b52565b611f519087612b8a565b95505b82945050505050915091565b60035460ff16156118ca5760405163d93c066560e01b815260040160405180910390fd5b600260045403611fa757604051633ee5aeb560e01b815260040160405180910390fd5b6002600455565b60ff8116600090815260076020526040902080546001600160a01b0316611fed57604051633e19716360e21b815260ff8316600482015260240161076b565b919050565b6040516001600160a01b03838116602483015260448201839052610aee91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061241d565b60008061205c611411565b915091506120718165ffffffffffff16151590565b158061208557504265ffffffffffff821610155b156120ad576040516319ca5ebb60e01b815265ffffffffffff8216600482015260240161076b565b6120c960006120c46002546001600160a01b031690565b6122b4565b506120d560008361224c565b5050600180546001600160d01b031916905550565b600082815260208190526040902060010154612105816118b5565b61077f83836122b4565b6118ca60008061234b565b6040516001600160a01b03848116602483015283811660448301526064820183905261077f9186918216906323b872dd9060840161201f565b61215d8282610f07565b6109405760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161076b565b600254600160d01b900465ffffffffffff16801561220f574265ffffffffffff821610156121e557600254600180546001600160d01b0316600160a01b90920465ffffffffffff16600160d01b0291909117905561220f565b6040517f2b1fa2edafe6f7b9e97c1a9e0c3660e645beb2dcaa2d45bdbf9beaf5472e1ec590600090a15b50600280546001600160a01b0316600160a01b65ffffffffffff948516026001600160d01b031617600160d01b9290931691909102919091179055565b6000826122aa5760006122676002546001600160a01b031690565b6001600160a01b03161461228e57604051631fe1e13d60e11b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0384161790555b610aff838361248e565b6000821580156122d157506002546001600160a01b038381169116145b156122e757600280546001600160a01b03191690555b610aff8383612520565b60035460ff166118ca57604051638dfc202b60e01b815260040160405180910390fd5b600065ffffffffffff821115612347576040516306dfcc6560e41b8152603060048201526024810183905260440161076b565b5090565b6000612355611411565b6001805465ffffffffffff8616600160a01b026001600160d01b03199091166001600160a01b03881617179055915061239790508165ffffffffffff16151590565b15610aee576040517f8886ebfc4259abdbc16601dd8fb5678e54878f47b3c34836cfc51154a960510990600090a1505050565b6000806123d5611372565b90508065ffffffffffff168365ffffffffffff16116123fd576123f88382612fbf565b610aff565b610aff65ffffffffffff8416620697806000828218828410028218610aff565b600080602060008451602086016000885af180612440576040513d6000823e3d81fd5b50506000513d91508115612458578060011415612465565b6001600160a01b0384163b155b1561077f57604051635274afe760e01b81526001600160a01b038516600482015260240161076b565b600061249a8383610f07565b612518576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556124d03390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016106eb565b5060006106eb565b600061252c8383610f07565b15612518576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016106eb565b508054600082556002029060005260206000209081019061070491905b80821115612347576000815560018101805466ffffffffffffff191690556002016125a8565b6000602082840312156125e057600080fd5b81356001600160e01b031981168114610aff57600080fd5b60ff8116811461070457600080fd5b60008083601f84011261261957600080fd5b50813567ffffffffffffffff81111561263157600080fd5b6020830191508360208260071b850101111561264c57600080fd5b9250929050565b60008060006040848603121561266857600080fd5b8335612673816125f8565b9250602084013567ffffffffffffffff81111561268f57600080fd5b61269b86828701612607565b9497909650939450505050565b6000602082840312156126ba57600080fd5b5035919050565b6000602082840312156126d357600080fd5b8135610aff816125f8565b6020815260018060a01b038251166020820152602082015160408201526040820151606082015260608201516080820152608082015160a0820152600060a083015160c08084015280518060e085015260005b8181101561274f576020818401810151610100878401015201612731565b5060006101008286010152610100601f19601f8301168501019250505092915050565b6001600160a01b038116811461070457600080fd5b6000806040838503121561279a57600080fd5b8235915060208301356127ac81612772565b809150509250929050565b6000602082840312156127c957600080fd5b8135610aff81612772565b6000604082840312156127e657600080fd5b50919050565b600080606083850312156127ff57600080fd5b823561280a816125f8565b915061281984602085016127d4565b90509250929050565b6003811061070457600080fd5b6000806040838503121561284257600080fd5b823561284d81612822565b915060208301356127ac81612822565b60006020828403121561286f57600080fd5b813565ffffffffffff81168114610aff57600080fd5b602080825282518282018190526000918401906040840190835b818110156128ef5783518051845261ffff602082015116602085015260408101511515604085015263ffffffff60608201511660608501525060808301925060208401935060018101905061289f565b509095945050505050565b600080600080600060a0868803121561291257600080fd5b853561291d81612822565b9450602086013561292d81612822565b93506040860135925060608601359150608086013561294b81612772565b809150509295509295909350565b60008060008060008060c0878903121561297257600080fd5b863561297d81612822565b9550602087013561298d81612822565b9450604087013561299d81612772565b9350606087013567ffffffffffffffff8111156129b957600080fd5b6129c589828a01612607565b90945092506129d9905088608089016127d4565b90509295509295509295565b600080600080606085870312156129fb57600080fd5b8435612a06816125f8565b935060208501359250604085013567ffffffffffffffff811115612a2957600080fd5b8501601f81018713612a3a57600080fd5b803567ffffffffffffffff811115612a5157600080fd5b876020828401011115612a6357600080fd5b949793965060200194505050565b60008060008060008060c08789031215612a8a57600080fd5b8635612a9581612822565b95506020870135612aa581612822565b945060408701359350606087013592506080870135612ac381612772565b9598949750929591949360a090920135925050565b600181811c90821680612aec57607f821691505b6020821081036127e657634e487b7160e01b600052602260045260246000fd5b600060208284031215612b1e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176106eb576106eb612b25565b600082612b6f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b808201808211156106eb576106eb612b25565b818103818111156106eb576106eb612b25565b634e487b7160e01b600052604160045260246000fd5b601f821115610aee57806000526020600020601f840160051c81016020851015612bed5750805b601f840160051c820191505b81811015612c0d5760008155600101612bf9565b5050505050565b67ffffffffffffffff831115612c2c57612c2c612bb0565b612c4083612c3a8354612ad8565b83612bc6565b6000601f841160018114612c745760008515612c5c5750838201355b600019600387901b1c1916600186901b178355612c0d565b600083815260209020601f19861690835b82811015612ca55786850135825560209485019460019092019101612c85565b5086821015612cc25760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b61ffff8116811461070457600080fd5b600060208284031215612d2c57600080fd5b8135610aff81612d0a565b801515811461070457600080fd5b81358155600181016020830135612d5b81612d0a565b81546040850135612d6b81612d37565b62ff000081151560101b1661ffff841662ffffff198416171784555050506000606084013563ffffffff81168114612da257600080fd5b825466ffffffff000000191660189190911b66ffffffff0000001617909155505050565b6040808252835190820181905260009060208501906060840190835b81811015612e00578351835260209384019390920191600101612de2565b50508381036020808601919091528551808352918101925085019060005b81811015612e4057825161ffff16845260209384019390920191600101612e1e565b50919695505050505050565b634e487b7160e01b600052602160045260246000fd5b65ffffffffffff81811683821601908111156106eb576106eb612b25565b60008060008060808587031215612e9657600080fd5b8451602086015160408701519195509350612eb0816125f8565b6060860151909250612ec181612d37565b939692955090935050565b6001815b6001841115612f0757808504811115612eeb57612eeb612b25565b6001841615612ef957908102905b60019390931c928002612ed0565b935093915050565b600082612f1e575060016106eb565b81612f2b575060006106eb565b8160018114612f415760028114612f4b57612f67565b60019150506106eb565b60ff841115612f5c57612f5c612b25565b50506001821b6106eb565b5060208310610133831016604e8410600b8410161715612f8a575081810a6106eb565b612f976000198484612ecc565b8060001904821115612fab57612fab612b25565b029392505050565b6000610aff8383612f0f565b65ffffffffffff82811682821603908111156106eb576106eb612b2556fea2646970667358221220f6c75a663c7dbd456d7baca4c1bc97fae5c2e0fed95507c3b3dfa65aed21b5c064736f6c634300081a0033";
  static readonly abi: readonly [
    {
      readonly inputs: readonly [
        {
          readonly internalType: "address";
          readonly name: "admin";
          readonly type: "address";
        },
        {
          readonly internalType: "uint48";
          readonly name: "adminDelay";
          readonly type: "uint48";
        },
        {
          readonly internalType: "address";
          readonly name: "baseAssetAddress";
          readonly type: "address";
        },
        {
          readonly internalType: "address";
          readonly name: "priceOracleAddress";
          readonly type: "address";
        },
      ];
      readonly stateMutability: "nonpayable";
      readonly type: "constructor";
    },
    {
      readonly inputs: readonly [];
      readonly name: "AccessControlBadConfirmation";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint48";
          readonly name: "schedule";
          readonly type: "uint48";
        },
      ];
      readonly name: "AccessControlEnforcedDefaultAdminDelay";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [];
      readonly name: "AccessControlEnforcedDefaultAdminRules";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "address";
          readonly name: "defaultAdmin";
          readonly type: "address";
        },
      ];
      readonly name: "AccessControlInvalidDefaultAdmin";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "address";
          readonly name: "account";
          readonly type: "address";
        },
        {
          readonly internalType: "bytes32";
          readonly name: "neededRole";
          readonly type: "bytes32";
        },
      ];
      readonly name: "AccessControlUnauthorizedAccount";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "basketId";
          readonly type: "uint8";
        },
      ];
      readonly name: "BasketAlreadyRegistered";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "basketId";
          readonly type: "uint8";
        },
      ];
      readonly name: "BasketNotConfigured";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [];
      readonly name: "EnforcedPause";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [];
      readonly name: "ExpectedPause";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [];
      readonly name: "InvalidAmount";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [];
      readonly name: "InvalidBaseAsset";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [];
      readonly name: "InvalidSlippage";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [];
      readonly name: "InvalidWeightsSum";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "assetId";
          readonly type: "bytes32";
        },
      ];
      readonly name: "OraclePriceDegraded";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "assetId";
          readonly type: "bytes32";
        },
      ];
      readonly name: "OraclePriceMissing";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint256";
          readonly name: "observedAge";
          readonly type: "uint256";
        },
        {
          readonly internalType: "uint256";
          readonly name: "allowedAge";
          readonly type: "uint256";
        },
      ];
      readonly name: "OracleStale";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "proofHash";
          readonly type: "bytes32";
        },
      ];
      readonly name: "ProofAlreadyConsumed";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [];
      readonly name: "ProofMismatch";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint256";
          readonly name: "nextAvailableTimestamp";
          readonly type: "uint256";
        },
      ];
      readonly name: "RebalanceTooSoon";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [];
      readonly name: "ReentrancyGuardReentrantCall";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "bits";
          readonly type: "uint8";
        },
        {
          readonly internalType: "uint256";
          readonly name: "value";
          readonly type: "uint256";
        },
      ];
      readonly name: "SafeCastOverflowedUintDowncast";
      readonly type: "error";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "address";
          readonly name: "token";
          readonly type: "address";
        },
      ];
      readonly name: "SafeERC20FailedOperation";
      readonly type: "error";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "uint8";
          readonly name: "basketId";
          readonly type: "uint8";
        },
        {
          readonly indexed: false;
          readonly internalType: "bytes32[]";
          readonly name: "assetIds";
          readonly type: "bytes32[]";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint16[]";
          readonly name: "weights";
          readonly type: "uint16[]";
        },
      ];
      readonly name: "BasketAllocationUpdated";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "uint8";
          readonly name: "basketId";
          readonly type: "uint8";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "stalenessThreshold";
          readonly type: "uint256";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "rebalanceInterval";
          readonly type: "uint256";
        },
      ];
      readonly name: "BasketConfigUpdated";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "uint8";
          readonly name: "basketId";
          readonly type: "uint8";
        },
        {
          readonly indexed: false;
          readonly internalType: "address";
          readonly name: "token";
          readonly type: "address";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "stalenessThreshold";
          readonly type: "uint256";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "rebalanceInterval";
          readonly type: "uint256";
        },
      ];
      readonly name: "BasketRegistered";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [];
      readonly name: "DefaultAdminDelayChangeCanceled";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: false;
          readonly internalType: "uint48";
          readonly name: "newDelay";
          readonly type: "uint48";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint48";
          readonly name: "effectSchedule";
          readonly type: "uint48";
        },
      ];
      readonly name: "DefaultAdminDelayChangeScheduled";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [];
      readonly name: "DefaultAdminTransferCanceled";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "address";
          readonly name: "newAdmin";
          readonly type: "address";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint48";
          readonly name: "acceptSchedule";
          readonly type: "uint48";
        },
      ];
      readonly name: "DefaultAdminTransferScheduled";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "uint8";
          readonly name: "basketId";
          readonly type: "uint8";
        },
        {
          readonly indexed: true;
          readonly internalType: "address";
          readonly name: "payer";
          readonly type: "address";
        },
        {
          readonly indexed: true;
          readonly internalType: "address";
          readonly name: "beneficiary";
          readonly type: "address";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "baseAmount";
          readonly type: "uint256";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "tokensMinted";
          readonly type: "uint256";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "nav";
          readonly type: "uint256";
        },
        {
          readonly indexed: false;
          readonly internalType: "bytes32";
          readonly name: "proofHash";
          readonly type: "bytes32";
        },
      ];
      readonly name: "MintExecuted";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "uint8";
          readonly name: "basketId";
          readonly type: "uint8";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "nav";
          readonly type: "uint256";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "timestamp";
          readonly type: "uint256";
        },
      ];
      readonly name: "NAVRefreshed";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: false;
          readonly internalType: "address";
          readonly name: "account";
          readonly type: "address";
        },
      ];
      readonly name: "Paused";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "address";
          readonly name: "oracle";
          readonly type: "address";
        },
      ];
      readonly name: "PriceOracleUpdated";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "uint8";
          readonly name: "basketId";
          readonly type: "uint8";
        },
        {
          readonly indexed: false;
          readonly internalType: "bytes32";
          readonly name: "proofHash";
          readonly type: "bytes32";
        },
        {
          readonly indexed: false;
          readonly internalType: "string";
          readonly name: "uri";
          readonly type: "string";
        },
      ];
      readonly name: "ProofRegistered";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "uint8";
          readonly name: "basketId";
          readonly type: "uint8";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "timestamp";
          readonly type: "uint256";
        },
      ];
      readonly name: "Rebalanced";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "uint8";
          readonly name: "basketId";
          readonly type: "uint8";
        },
        {
          readonly indexed: true;
          readonly internalType: "address";
          readonly name: "from";
          readonly type: "address";
        },
        {
          readonly indexed: true;
          readonly internalType: "address";
          readonly name: "recipient";
          readonly type: "address";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "tokensBurned";
          readonly type: "uint256";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "baseAmount";
          readonly type: "uint256";
        },
        {
          readonly indexed: false;
          readonly internalType: "uint256";
          readonly name: "nav";
          readonly type: "uint256";
        },
      ];
      readonly name: "RedeemExecuted";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "bytes32";
          readonly name: "role";
          readonly type: "bytes32";
        },
        {
          readonly indexed: true;
          readonly internalType: "bytes32";
          readonly name: "previousAdminRole";
          readonly type: "bytes32";
        },
        {
          readonly indexed: true;
          readonly internalType: "bytes32";
          readonly name: "newAdminRole";
          readonly type: "bytes32";
        },
      ];
      readonly name: "RoleAdminChanged";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "bytes32";
          readonly name: "role";
          readonly type: "bytes32";
        },
        {
          readonly indexed: true;
          readonly internalType: "address";
          readonly name: "account";
          readonly type: "address";
        },
        {
          readonly indexed: true;
          readonly internalType: "address";
          readonly name: "sender";
          readonly type: "address";
        },
      ];
      readonly name: "RoleGranted";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: true;
          readonly internalType: "bytes32";
          readonly name: "role";
          readonly type: "bytes32";
        },
        {
          readonly indexed: true;
          readonly internalType: "address";
          readonly name: "account";
          readonly type: "address";
        },
        {
          readonly indexed: true;
          readonly internalType: "address";
          readonly name: "sender";
          readonly type: "address";
        },
      ];
      readonly name: "RoleRevoked";
      readonly type: "event";
    },
    {
      readonly anonymous: false;
      readonly inputs: readonly [
        {
          readonly indexed: false;
          readonly internalType: "address";
          readonly name: "account";
          readonly type: "address";
        },
      ];
      readonly name: "Unpaused";
      readonly type: "event";
    },
    {
      readonly inputs: readonly [];
      readonly name: "DEFAULT_ADMIN_ROLE";
      readonly outputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "";
          readonly type: "bytes32";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "ORACLE_MANAGER_ROLE";
      readonly outputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "";
          readonly type: "bytes32";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "RESERVE_AUDITOR_ROLE";
      readonly outputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "";
          readonly type: "bytes32";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "TREASURY_ROLE";
      readonly outputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "";
          readonly type: "bytes32";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "acceptDefaultAdminTransfer";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "baseAsset";
      readonly outputs: readonly [
        {
          readonly internalType: "contract IERC20";
          readonly name: "";
          readonly type: "address";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "id";
          readonly type: "uint8";
        },
      ];
      readonly name: "basketAllocations";
      readonly outputs: readonly [
        {
          readonly components: readonly [
            {
              readonly internalType: "bytes32";
              readonly name: "assetId";
              readonly type: "bytes32";
            },
            {
              readonly internalType: "uint16";
              readonly name: "weightBps";
              readonly type: "uint16";
            },
            {
              readonly internalType: "bool";
              readonly name: "isBond";
              readonly type: "bool";
            },
            {
              readonly internalType: "uint32";
              readonly name: "accrualBps";
              readonly type: "uint32";
            },
          ];
          readonly internalType: "struct BasketManager.WeightedAsset[]";
          readonly name: "";
          readonly type: "tuple[]";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "id";
          readonly type: "uint8";
        },
      ];
      readonly name: "basketConfig";
      readonly outputs: readonly [
        {
          readonly components: readonly [
            {
              readonly internalType: "uint256";
              readonly name: "stalenessThreshold";
              readonly type: "uint256";
            },
            {
              readonly internalType: "uint256";
              readonly name: "rebalanceInterval";
              readonly type: "uint256";
            },
          ];
          readonly internalType: "struct BasketManager.BasketConfig";
          readonly name: "";
          readonly type: "tuple";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "enum BasketManager.Region";
          readonly name: "region";
          readonly type: "uint8";
        },
        {
          readonly internalType: "enum BasketManager.Strategy";
          readonly name: "strategy";
          readonly type: "uint8";
        },
      ];
      readonly name: "basketId";
      readonly outputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "";
          readonly type: "uint8";
        },
      ];
      readonly stateMutability: "pure";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "id";
          readonly type: "uint8";
        },
      ];
      readonly name: "basketState";
      readonly outputs: readonly [
        {
          readonly components: readonly [
            {
              readonly internalType: "contract BasketToken";
              readonly name: "token";
              readonly type: "address";
            },
            {
              readonly internalType: "uint256";
              readonly name: "nav";
              readonly type: "uint256";
            },
            {
              readonly internalType: "uint256";
              readonly name: "navTimestamp";
              readonly type: "uint256";
            },
            {
              readonly internalType: "uint256";
              readonly name: "lastRebalance";
              readonly type: "uint256";
            },
            {
              readonly internalType: "bytes32";
              readonly name: "latestProofHash";
              readonly type: "bytes32";
            },
            {
              readonly internalType: "string";
              readonly name: "latestProofUri";
              readonly type: "string";
            },
          ];
          readonly internalType: "struct BasketManager.BasketState";
          readonly name: "";
          readonly type: "tuple";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "address";
          readonly name: "newAdmin";
          readonly type: "address";
        },
      ];
      readonly name: "beginDefaultAdminTransfer";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "cancelDefaultAdminTransfer";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint48";
          readonly name: "newDelay";
          readonly type: "uint48";
        },
      ];
      readonly name: "changeDefaultAdminDelay";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "";
          readonly type: "bytes32";
        },
      ];
      readonly name: "consumedProofs";
      readonly outputs: readonly [
        {
          readonly internalType: "bool";
          readonly name: "";
          readonly type: "bool";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "defaultAdmin";
      readonly outputs: readonly [
        {
          readonly internalType: "address";
          readonly name: "";
          readonly type: "address";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "defaultAdminDelay";
      readonly outputs: readonly [
        {
          readonly internalType: "uint48";
          readonly name: "";
          readonly type: "uint48";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "defaultAdminDelayIncreaseWait";
      readonly outputs: readonly [
        {
          readonly internalType: "uint48";
          readonly name: "";
          readonly type: "uint48";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "id";
          readonly type: "uint8";
        },
      ];
      readonly name: "getNAV";
      readonly outputs: readonly [
        {
          readonly internalType: "uint256";
          readonly name: "nav";
          readonly type: "uint256";
        },
        {
          readonly internalType: "uint256";
          readonly name: "timestamp";
          readonly type: "uint256";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "role";
          readonly type: "bytes32";
        },
      ];
      readonly name: "getRoleAdmin";
      readonly outputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "";
          readonly type: "bytes32";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "role";
          readonly type: "bytes32";
        },
        {
          readonly internalType: "address";
          readonly name: "account";
          readonly type: "address";
        },
      ];
      readonly name: "grantRole";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "role";
          readonly type: "bytes32";
        },
        {
          readonly internalType: "address";
          readonly name: "account";
          readonly type: "address";
        },
      ];
      readonly name: "hasRole";
      readonly outputs: readonly [
        {
          readonly internalType: "bool";
          readonly name: "";
          readonly type: "bool";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "enum BasketManager.Region";
          readonly name: "region";
          readonly type: "uint8";
        },
        {
          readonly internalType: "enum BasketManager.Strategy";
          readonly name: "strategy";
          readonly type: "uint8";
        },
        {
          readonly internalType: "uint256";
          readonly name: "baseAmount";
          readonly type: "uint256";
        },
        {
          readonly internalType: "uint256";
          readonly name: "minTokensOut";
          readonly type: "uint256";
        },
        {
          readonly internalType: "address";
          readonly name: "beneficiary";
          readonly type: "address";
        },
        {
          readonly internalType: "bytes32";
          readonly name: "proofHash";
          readonly type: "bytes32";
        },
      ];
      readonly name: "mint";
      readonly outputs: readonly [
        {
          readonly internalType: "uint256";
          readonly name: "tokensMinted";
          readonly type: "uint256";
        },
      ];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "owner";
      readonly outputs: readonly [
        {
          readonly internalType: "address";
          readonly name: "";
          readonly type: "address";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "pause";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "paused";
      readonly outputs: readonly [
        {
          readonly internalType: "bool";
          readonly name: "";
          readonly type: "bool";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "pendingDefaultAdmin";
      readonly outputs: readonly [
        {
          readonly internalType: "address";
          readonly name: "newAdmin";
          readonly type: "address";
        },
        {
          readonly internalType: "uint48";
          readonly name: "schedule";
          readonly type: "uint48";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "pendingDefaultAdminDelay";
      readonly outputs: readonly [
        {
          readonly internalType: "uint48";
          readonly name: "newDelay";
          readonly type: "uint48";
        },
        {
          readonly internalType: "uint48";
          readonly name: "schedule";
          readonly type: "uint48";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "priceOracle";
      readonly outputs: readonly [
        {
          readonly internalType: "contract IMedianOracle";
          readonly name: "";
          readonly type: "address";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "id";
          readonly type: "uint8";
        },
      ];
      readonly name: "proofOfReserves";
      readonly outputs: readonly [
        {
          readonly internalType: "bool";
          readonly name: "isHealthy";
          readonly type: "bool";
        },
        {
          readonly internalType: "uint256";
          readonly name: "backing";
          readonly type: "uint256";
        },
        {
          readonly internalType: "uint256";
          readonly name: "requiredBacking";
          readonly type: "uint256";
        },
        {
          readonly internalType: "uint256";
          readonly name: "nav";
          readonly type: "uint256";
        },
        {
          readonly internalType: "uint256";
          readonly name: "timestamp";
          readonly type: "uint256";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "enum BasketManager.Region";
          readonly name: "region";
          readonly type: "uint8";
        },
        {
          readonly internalType: "enum BasketManager.Strategy";
          readonly name: "strategy";
          readonly type: "uint8";
        },
        {
          readonly internalType: "uint256";
          readonly name: "tokenAmount";
          readonly type: "uint256";
        },
        {
          readonly internalType: "uint256";
          readonly name: "minBaseAmount";
          readonly type: "uint256";
        },
        {
          readonly internalType: "address";
          readonly name: "recipient";
          readonly type: "address";
        },
      ];
      readonly name: "redeem";
      readonly outputs: readonly [
        {
          readonly internalType: "uint256";
          readonly name: "baseAmountOut";
          readonly type: "uint256";
        },
      ];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "id";
          readonly type: "uint8";
        },
      ];
      readonly name: "refreshNAV";
      readonly outputs: readonly [
        {
          readonly internalType: "uint256";
          readonly name: "nav";
          readonly type: "uint256";
        },
        {
          readonly internalType: "uint256";
          readonly name: "timestamp";
          readonly type: "uint256";
        },
      ];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "enum BasketManager.Region";
          readonly name: "region";
          readonly type: "uint8";
        },
        {
          readonly internalType: "enum BasketManager.Strategy";
          readonly name: "strategy";
          readonly type: "uint8";
        },
        {
          readonly internalType: "contract BasketToken";
          readonly name: "token";
          readonly type: "address";
        },
        {
          readonly components: readonly [
            {
              readonly internalType: "bytes32";
              readonly name: "assetId";
              readonly type: "bytes32";
            },
            {
              readonly internalType: "uint16";
              readonly name: "weightBps";
              readonly type: "uint16";
            },
            {
              readonly internalType: "bool";
              readonly name: "isBond";
              readonly type: "bool";
            },
            {
              readonly internalType: "uint32";
              readonly name: "accrualBps";
              readonly type: "uint32";
            },
          ];
          readonly internalType: "struct BasketManager.WeightedAsset[]";
          readonly name: "assets";
          readonly type: "tuple[]";
        },
        {
          readonly components: readonly [
            {
              readonly internalType: "uint256";
              readonly name: "stalenessThreshold";
              readonly type: "uint256";
            },
            {
              readonly internalType: "uint256";
              readonly name: "rebalanceInterval";
              readonly type: "uint256";
            },
          ];
          readonly internalType: "struct BasketManager.BasketConfig";
          readonly name: "config";
          readonly type: "tuple";
        },
      ];
      readonly name: "registerBasket";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "id";
          readonly type: "uint8";
        },
        {
          readonly internalType: "bytes32";
          readonly name: "proofHash";
          readonly type: "bytes32";
        },
        {
          readonly internalType: "string";
          readonly name: "uri";
          readonly type: "string";
        },
      ];
      readonly name: "registerProof";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "role";
          readonly type: "bytes32";
        },
        {
          readonly internalType: "address";
          readonly name: "account";
          readonly type: "address";
        },
      ];
      readonly name: "renounceRole";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "bytes32";
          readonly name: "role";
          readonly type: "bytes32";
        },
        {
          readonly internalType: "address";
          readonly name: "account";
          readonly type: "address";
        },
      ];
      readonly name: "revokeRole";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "rollbackDefaultAdminDelay";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "address";
          readonly name: "newOracle";
          readonly type: "address";
        },
      ];
      readonly name: "setPriceOracle";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "bytes4";
          readonly name: "interfaceId";
          readonly type: "bytes4";
        },
      ];
      readonly name: "supportsInterface";
      readonly outputs: readonly [
        {
          readonly internalType: "bool";
          readonly name: "";
          readonly type: "bool";
        },
      ];
      readonly stateMutability: "view";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "id";
          readonly type: "uint8";
        },
      ];
      readonly name: "triggerRebalance";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [];
      readonly name: "unpause";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "id";
          readonly type: "uint8";
        },
        {
          readonly components: readonly [
            {
              readonly internalType: "bytes32";
              readonly name: "assetId";
              readonly type: "bytes32";
            },
            {
              readonly internalType: "uint16";
              readonly name: "weightBps";
              readonly type: "uint16";
            },
            {
              readonly internalType: "bool";
              readonly name: "isBond";
              readonly type: "bool";
            },
            {
              readonly internalType: "uint32";
              readonly name: "accrualBps";
              readonly type: "uint32";
            },
          ];
          readonly internalType: "struct BasketManager.WeightedAsset[]";
          readonly name: "assets";
          readonly type: "tuple[]";
        },
      ];
      readonly name: "updateAllocation";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
    {
      readonly inputs: readonly [
        {
          readonly internalType: "uint8";
          readonly name: "id";
          readonly type: "uint8";
        },
        {
          readonly components: readonly [
            {
              readonly internalType: "uint256";
              readonly name: "stalenessThreshold";
              readonly type: "uint256";
            },
            {
              readonly internalType: "uint256";
              readonly name: "rebalanceInterval";
              readonly type: "uint256";
            },
          ];
          readonly internalType: "struct BasketManager.BasketConfig";
          readonly name: "config";
          readonly type: "tuple";
        },
      ];
      readonly name: "updateConfig";
      readonly outputs: readonly [];
      readonly stateMutability: "nonpayable";
      readonly type: "function";
    },
  ];
  static createInterface(): BasketManagerInterface;
  static connect(address: string, runner?: ContractRunner | null): BasketManager;
}
export {};
//# sourceMappingURL=BasketManager__factory.d.ts.map
